.data
ent: .asciiz "Insira o valor de Vet["
ent2: .asciiz "]: "
.align 2
vet: .space 20

.text	

main:   la $a0, vet #Endereço do vetor como parametro
	jal leitura #leitura(vet)
	move $a0, $v0 #Endereço do vetor retornado
	jal escrita #escrita(vet)
	li $v0, 10  #Código para finalizar o programa
	syscall #Finaliza o programa
	
leitura:
	move $t0, $a0 #Salva o endereço base de vet
	move $t1, $t0 #Endereço de vet[i]
	li $t2, 0 #i = 0
l:
	la $a0, ent #Carrega o endereço da string
	li $v0, 4 #Codigo de impressão de string
	syscall #impressão da string
	move $a0, $t2 #Carrega o índice do vetor
	li $v0, 1 #Código de impressão de inteiro
	syscall #Imprime o indice i
	la $a0, ent2 #Carrega o endereço da string
	li $v0, 4 #Código de impressão de string
	syscall #impressão de string
	li $v0, 5 #Código de leitura de inteiro
	syscall #Leitura do valor
	sw $v0, ($t1) #Salva o valor lido em vet[i]
	add $t1, $t1, 4 #Endereço de vet[i+1]
	addi $t2, $t2, 1 #i++
	blt  $t2, 5, l #if(i<5)goto l
	move $v0, $t0 #endereço de vet para retorno
	jr $ra #Retorna para a main
escrita:
	move $t0, $a0 #Salva o endereço base de vet
	move $t1, $t0 #Endereço de vet[i]
	li $t2, 0 #i=0
e:	
	lw $a0, ($t1) #Carrega o valor de vet[i]
	li $v0, 1 #Código de impressão de inteiro
	syscall #Imprime vet[i]
	li $a0, 32 #Código ASCII para espaço
	li $v0, 11 #Código de impressão de caractere
	syscall #Imprime um espaço
	add $t1, $t1, 4 #endereço de vet[i+1]
	addi $t2, $t2, 1 #i++
	blt $t2, 5, e #if(i<5) goto e
	move $v0, $t0 #Endereço de vet para retorno
	jr $ra #Retorna para a main
	